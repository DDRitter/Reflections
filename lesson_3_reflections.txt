When would you want to use a remote repository rather than keeping all your work local?

When I have multiple physical work locations and I want to keep track of all the work.
Also, when I work in a collaborative project with other people.



Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

The remote repository status does not need to be a working version at any times.
It's best to let the user decide when the remote repository has all the files ready for download.



Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are the way github separates a repository to allow us continue a project in which we don't have permission to commit.
Clones are just copies of repositories and can be either local or from github.
Branches are divergencies from the main development, which allow us to develop features and experiment withous affecting the main workflow.



What is the benefit of having a copy of the last known state of the remote stored locally?

You can download the remote state of a project and then work offline with the stored data until you can upload the new rework, merge, etc.



How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Using only Git you could manage with some other tool like Dropbox to share the projec folder.
Using only GitHub it could be harder testing checkouts, specially programs. 




When would you want to make changes in a separate branch rather than directly in master?
What benefits does each approach have?

Separated branches are useful for testing purposes or when several people work on different things from the master branch.
This is the best way to keep changes organized and to keep the master branch clean of temporary or experimental content, because you only merge what you have approved in your team.





Commands:

git push origin master     |  Publica los cambios en github
git pull origin master     |  Descarga los cambios de github a la copia local
git reset --hard <commit>  |  Totally forces undo changes up until <commit>
git fetch                  |  Updates the local copy of github with the cloud content
